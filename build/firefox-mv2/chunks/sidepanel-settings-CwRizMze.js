import { a as C, c as l, f as m, u as _, e as H, j as e } from "./FontSizeProvider-C1DZf1x-.js";
import { u as $, e as J, k as o, l as i, m as W, n as X, C as Y, s as Z, F as g, S as x, o as w, p as N, q as ee, g as ae, r as te, t as re, v as se, w as le, x as ne, h as de, y as oe, L as ie } from "./SaveButton-B6h4W40A.js";
import { u as ge, S as ce, a as me, T as xe, b as he, M as ue } from "./sst-settings-XLQemrSm.js";
import { A as pe } from "./AdvanceOllamaSettings-zphIMASi.js";
import { S as be } from "./sidepanel-rag-HIjhea93.js";
import { R as h } from "./index-Bva-imIy.js";
import { T as ye } from "./Trans-PMjSaMEn.js";
import { l as ke } from "./icon-BmsVQuvA.js";
import { C as je, a as fe } from "./chevron-right-CHUn5UPl.js";
import "./elevenlabs-Aq8HmJkY.js";
import "./use-form-JlyzcUxc.js";
import "./useBubbleLock-D9rWo-oM.js";
const ve = () => {
  var _a;
  const { t } = C("settings"), [n, d] = l.useState(""), [u, p] = l.useState(""), [b, y] = l.useState(""), [k, j] = l.useState(""), [c, P] = l.useState("normal"), [L, R] = m("copilotResumeLastChat", false), [O, M] = m("hideCurrentChatModelSettings", false), [T, E] = m("speechToTextLanguage", "en-US"), { mode: z, toggleDarkMode: f } = _(), F = H(), { changeLocale: q, locale: B, supportLanguage: U } = ge(), { data: r, status: v } = $({ queryKey: ["sidebarSettings"], queryFn: async () => {
    const [a, s, S, I, K, G, V, D] = await Promise.all([ae(), te(), re(), se({ returnEmpty: true }), le(), ne(), de(), oe()]);
    return { url: a, normalSystemPrompt: s, ragSystemPrompt: S.ragPrompt, ragQuestionPrompt: S.ragQuestionPrompt, models: I, chunkOverlap: K, chunkSize: G, defaultEM: V, totalFilePerKB: D };
  } }), { mutate: A, isPending: Q } = J({ mutationFn: async (a) => {
    await ee(a.model, a.chunkSize, a.overlap, r.totalFilePerKB), await F.invalidateQueries({ queryKey: ["sidebarSettings"] });
  } });
  return l.useEffect(() => {
    r && (d(r.url), p(r.normalSystemPrompt), y(r.ragSystemPrompt), j(r.ragQuestionPrompt));
  }, [r]), v === "pending" ? e.jsxs("div", { className: "flex flex-col gap-4 p-4", children: [e.jsx(o, { active: true }), e.jsx(o, { active: true }), e.jsx(o, { active: true }), e.jsx(o, { active: true })] }) : v === "error" ? e.jsx("div", { children: "Error" }) : e.jsxs("div", { className: "flex flex-col gap-4 p-4 max-w-2xl mx-auto lg:max-w-3xl xl:max-w-4xl 2xl:max-w-5xl", children: [e.jsxs("div", { className: "border border-gray-300 dark:border-gray-700 rounded p-4 bg-white dark:bg-[#171717]", children: [e.jsx("h2", { className: "text-md font-semibold dark:text-white", children: t("managePrompts.title") }), e.jsx("div", { className: "my-3 flex justify-end", children: e.jsxs(h.Group, { defaultValue: c, onChange: (a) => P(a.target.value), children: [e.jsx(h.Button, { value: "normal", children: t("managePrompts.option1") }), e.jsx(h.Button, { value: "rag", children: t("managePrompts.option2") })] }) }), c === "normal" && e.jsxs("div", { children: [e.jsx("span", { className: "text-md font-thin text-gray-500 dark:text-gray-400", children: t("managePrompts.systemPrompt") }), e.jsx("textarea", { className: "w-full border border-gray-300 dark:border-gray-700 rounded p-2 dark:bg-[#171717] dark:text-white dark:placeholder-gray-400", value: u, onChange: (a) => p(a.target.value) }), e.jsx("div", { className: "flex justify-end", children: e.jsx(i, { onClick: () => {
    W(u);
  } }) })] }), c === "rag" && e.jsxs("div", { children: [e.jsxs("div", { className: "mb-3", children: [e.jsx("span", { className: "text-md font-thin text-gray-500 dark:text-gray-400", children: t("managePrompts.systemPrompt") }), e.jsx("textarea", { className: "w-full border border-gray-300 dark:border-gray-700 rounded p-2 dark:bg-[#171717] dark:text-white dark:placeholder-gray-400", value: b, onChange: (a) => y(a.target.value) })] }), e.jsxs("div", { className: "mb-3", children: [e.jsx("span", { className: "text-md  font-thin text-gray-500 dark:text-gray-400", children: t("managePrompts.questionPrompt") }), e.jsx("textarea", { className: "w-full border border-gray-300 dark:border-gray-700 rounded p-2 dark:bg-[#171717] dark:text-white dark:placeholder-gray-400", value: k, onChange: (a) => j(a.target.value) })] }), e.jsx("div", { className: "flex justify-end", children: e.jsx(i, { onClick: () => {
    X(b, k);
  } }) })] })] }), e.jsx("div", { className: "border border-gray-300 dark:border-gray-700 rounded p-4 bg-white dark:bg-[#171717]", children: e.jsx(be, { hideBorder: true }) }), e.jsxs("div", { className: "border flex flex-col gap-4 border-gray-300 dark:border-gray-700 rounded p-4 bg-white dark:bg-[#171717]", children: [e.jsx("h2", { className: "text-md font-semibold dark:text-white", children: t("ollamaSettings.heading") }), e.jsx("input", { className: "w-full border border-gray-300 dark:border-gray-700 rounded p-2 dark:bg-[#171717] dark:text-white dark:placeholder-gray-400", value: n, type: "url", onChange: (a) => d(a.target.value), placeholder: t("ollamaSettings.settings.ollamaUrl.placeholder") }), e.jsx(Y, { size: "small", items: [{ key: "1", label: e.jsxs("div", { children: [e.jsx("h2", { className: "text-base font-semibold leading-7 text-gray-900 dark:text-white", children: t("ollamaSettings.settings.advanced.label") }), e.jsx("p", { className: "text-xs text-gray-500 dark:text-gray-400 mb-4", children: e.jsx(ye, { i18nKey: "settings:ollamaSettings.settings.advanced.help", components: { anchor: e.jsx("a", { href: "https://github.com/n4ze3m/page-assist/blob/main/docs/connection-issue.md#solutions", target: "__blank", className: "text-blue-600 dark:text-blue-400" }) } }) })] }), children: e.jsx(pe, {}) }] }), e.jsx("div", { className: "flex justify-end", children: e.jsx(i, { onClick: () => {
    Z(n);
  } }) })] }), e.jsxs("div", { className: "border border-gray-300 dark:border-gray-700 rounded p-4 bg-white dark:bg-[#171717]", children: [e.jsx("h2", { className: "text-md mb-4 font-semibold dark:text-white", children: t("rag.ragSettings.label") }), e.jsxs(g, { onFinish: (a) => {
    A({ model: a.defaultEM, chunkSize: a.chunkSize, overlap: a.chunkOverlap });
  }, initialValues: { chunkSize: r.chunkSize, chunkOverlap: r.chunkOverlap, defaultEM: r.defaultEM }, children: [e.jsx(g.Item, { name: "defaultEM", label: t("rag.ragSettings.model.label"), help: t("rag.ragSettings.model.help"), rules: [{ required: true, message: t("rag.ragSettings.model.required") }], children: e.jsx(x, { size: "large", filterOption: (a, s) => s.label.toLowerCase().indexOf(a.toLowerCase()) >= 0 || s.value.toLowerCase().indexOf(a.toLowerCase()) >= 0, showSearch: true, placeholder: "Select a model", style: { width: "100%" }, className: "mt-4", options: (_a = r.models) == null ? void 0 : _a.map((a) => ({ label: a.name, value: a.model })) }) }), e.jsx(g.Item, { name: "chunkSize", label: t("rag.ragSettings.chunkSize.label"), rules: [{ required: true, message: t("rag.ragSettings.chunkSize.required") }], children: e.jsx(w, { style: { width: "100%" }, placeholder: t("rag.ragSettings.chunkSize.placeholder") }) }), e.jsx(g.Item, { name: "chunkOverlap", label: t("rag.ragSettings.chunkOverlap.label"), rules: [{ required: true, message: t("rag.ragSettings.chunkOverlap.required") }], children: e.jsx(w, { style: { width: "100%" }, placeholder: t("rag.ragSettings.chunkOverlap.placeholder") }) }), e.jsx("div", { className: "flex justify-end", children: e.jsx(i, { disabled: Q, btnType: "submit" }) })] })] }), e.jsxs("div", { className: "border space-y-3 w-full border-gray-300 dark:border-gray-700 rounded p-4 bg-white dark:bg-[#171717]", children: [e.jsx("h2", { className: "text-base mb-4 font-semibold leading-7 text-gray-900 dark:text-white", children: t("generalSettings.title") }), e.jsxs("div", { className: "flex flex-col  space-y-4", children: [e.jsx("span", { className: "text-gray-500   dark:text-neutral-50", children: t("generalSettings.settings.copilotResumeLastChat.label") }), e.jsx("div", { children: e.jsx(N, { checked: L, onChange: (a) => R(a) }) })] }), e.jsxs("div", { className: "flex flex-col space-y-4", children: [e.jsx("div", { className: "inline-flex items-center gap-2", children: e.jsx("span", { className: "text-gray-500   dark:text-neutral-50", children: t("generalSettings.settings.hideCurrentChatModelSettings.label") }) }), e.jsx("div", { children: e.jsx(N, { checked: O, onChange: (a) => M(a) }) })] }), e.jsxs("div", { children: [e.jsxs("div", { className: "text-xs mb-2  dark:text-white", children: [t("generalSettings.settings.speechRecognitionLang.label"), " "] }), e.jsx(x, { placeholder: t("generalSettings.settings.speechRecognitionLang.placeholder"), allowClear: true, showSearch: true, options: ce, value: T, filterOption: (a, s) => s.label.toLowerCase().indexOf(a.toLowerCase()) >= 0 || s.value.toLowerCase().indexOf(a.toLowerCase()) >= 0, onChange: (a) => {
    E(a);
  }, style: { width: "100%" } })] }), e.jsxs("div", { children: [e.jsxs("div", { className: "text-xs mb-2  dark:text-white", children: [t("generalSettings.settings.language.label"), " "] }), e.jsx(x, { placeholder: t("generalSettings.settings.language.placeholder"), showSearch: true, options: U, value: B, filterOption: (a, s) => s.label.toLowerCase().indexOf(a.toLowerCase()) >= 0 || s.value.toLowerCase().indexOf(a.toLowerCase()) >= 0, onChange: (a) => {
    q(a);
  }, style: { width: "100%" } })] })] }), e.jsx("div", { className: "border border-gray-300 dark:border-gray-700 rounded p-4 bg-white dark:bg-[#171717]", children: e.jsx(me, { hideBorder: true }) }), e.jsx("div", { className: "border border-gray-300 dark:border-gray-700 rounded p-4 bg-white dark:bg-[#171717]", children: e.jsx(xe, { hideBorder: true }) }), e.jsxs("div", { className: "border border-gray-300 dark:border-gray-700 rounded p-4 bg-white dark:bg-[#171717]", children: [e.jsxs("h2", { className: "text-md mb-4 font-semibold dark:text-white", children: [t("generalSettings.settings.darkMode.label"), " "] }), z === "dark" ? e.jsxs("button", { onClick: f, className: "select-none inline-flex text-center w-full rounded-lg border border-gray-900 py-3 px-6 justify-center font-sans text-xs font-bold uppercase text-gray-900 transition-all hover:opacity-75 focus:ring focus:ring-gray-300 active:opacity-[0.85] disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none dark:border-gray-100 dark:text-white dark:hover:opacity-75 dark:focus:ring-dark dark:active:opacity-75 dark:disabled:pointer-events-none dark:disabled:opacity-50 dark:disabled:shadow-none", children: [e.jsx(he, { className: "h-4 w-4 mr-2" }), t("generalSettings.settings.darkMode.options.light")] }) : e.jsxs("button", { onClick: f, className: "select-none inline-flex text-center w-full rounded-lg border border-gray-900 py-3 px-6 justify-center font-sans text-xs font-bold uppercase text-gray-900 transition-all hover:opacity-75 focus:ring focus:ring-gray-300 active:opacity-[0.85] disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none dark:border-gray-100 dark:text-white dark:hover:opacity-75 dark:focus:ring-dark dark:active:opacity-75 dark:disabled:pointer-events-none dark:disabled:opacity-50 dark:disabled:shadow-none", children: [e.jsx(ue, { className: "h-4 w-4 mr-2" }), t("generalSettings.settings.darkMode.options.dark")] })] })] });
}, Se = () => {
  const { t, i18n: n } = C("common"), d = (n == null ? void 0 : n.dir()) === "rtl";
  return e.jsxs("div", { className: "flex px-3 justify-start gap-3 bg-white dark:bg-[#171717] border-b border-gray-300 dark:border-gray-700  py-4 items-center", children: [e.jsx(ie, { to: "/", children: d ? e.jsx(je, { className: "h-5 w-5 text-gray-500" }) : e.jsx(fe, { className: "h-5 w-5 text-gray-500" }) }), e.jsxs("div", { className: "focus:outline-none focus-visible:ring-2 focus-visible:ring-pink-700 flex items-center dark:text-white", children: [e.jsx("img", { className: "h-6 w-auto", src: ke, alt: t("pageAssist") }), e.jsx("span", { className: "ml-1 text-sm ", children: t("pageAssist") })] })] });
}, qe = () => e.jsxs("div", { className: "flex bg-neutral-50 dark:bg-[#171717] flex-col min-h-screen mx-auto max-w-7xl", children: [e.jsx("div", { className: "sticky bg-white dark:bg-[#171717] top-0 z-10", children: e.jsx(Se, {}) }), e.jsx(ve, {})] });
export {
  qe as default
};
